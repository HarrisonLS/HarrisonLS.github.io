import{_ as s,o as n,c as a,O as l}from"./chunks/framework.404bdcb1.js";const b=JSON.parse('{"title":"Rust 相关知识","description":"","frontmatter":{},"headers":[],"relativePath":"backEnd/rust/index.md","filePath":"backEnd/rust/index.md"}'),p={name:"backEnd/rust/index.md"},e=l(`<h1 id="rust-相关知识" tabindex="-1">Rust 相关知识 <a class="header-anchor" href="#rust-相关知识" aria-label="Permalink to &quot;Rust 相关知识&quot;">​</a></h1><ul><li><a href="https://rustup.rs/" target="_blank" rel="noreferrer">rustup 工具</a> 用于管理自己的 Rust 版本</li><li><a href="https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8f515709abd520d98a6ac7b854227652" target="_blank" rel="noreferrer">rust playground</a> playground关于内存的示例</li></ul><h3 id="rustup-工具使用" tabindex="-1">rustup 工具使用 <a class="header-anchor" href="#rustup-工具使用" aria-label="Permalink to &quot;rustup 工具使用&quot;">​</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 版本查看</span></span>
<span class="line"><span style="color:#FFCB6B;">rustc</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-v</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 版本更新</span></span>
<span class="line"><span style="color:#FFCB6B;">rustup</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">update</span></span>
<span class="line"><span style="color:#FFCB6B;">rustup</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">update</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1.72</span><span style="color:#C3E88D;">.0</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 指定版本</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 环境删除</span></span>
<span class="line"><span style="color:#FFCB6B;">rustup</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">self</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">uninstall</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 编译文件</span></span>
<span class="line"><span style="color:#FFCB6B;">rustc</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">xxx.rs</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 编译后产生同名可运行文件xxx，利用脚本方式./xxx 运行产物。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="cargo-创建项目" tabindex="-1">Cargo 创建项目 <a class="header-anchor" href="#cargo-创建项目" aria-label="Permalink to &quot;Cargo 创建项目&quot;">​</a></h3><p>Cargo 是 Rust 的构建系统和包管理器。大多数 Rustacean 们使用 Cargo 来管理他们的 Rust 项目。</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 查看版本号</span></span>
<span class="line"><span style="color:#FFCB6B;">cargo</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--version</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 创建项目</span></span>
<span class="line"><span style="color:#FFCB6B;">cargo</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">new</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">hello-cargo</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">hello-cargo</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">Cargo.lock</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">Cargo.toml</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">src</span></span>
<span class="line"><span style="color:#FFCB6B;">│  </span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">└──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">main.rs</span></span>
<span class="line"><span style="color:#FFCB6B;">└──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">target</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">├──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">CACHEDIR.TAG</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">└──</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">debug</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 构建项目</span></span>
<span class="line"><span style="color:#FFCB6B;">cargo</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">build</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 在一个命令中同时编译代码并运行生成的可执行文件</span></span>
<span class="line"><span style="color:#FFCB6B;">cargo</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">run</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 快速检查代码确保其可以编译，但并不产生可执行文件</span></span>
<span class="line"><span style="color:#FFCB6B;">cargo</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">check</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 在 target/release 而不是 target/debug 下生成可执行文件。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 这些优化可以让 Rust 代码运行的更快，不过启用这些优化也需要消耗更长的编译时间。</span></span>
<span class="line"><span style="color:#FFCB6B;">cargo</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">build</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--release</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 用来做 lint</span></span>
<span class="line"><span style="color:#FFCB6B;">cargo</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">clippy</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 自动格式化代码</span></span>
<span class="line"><span style="color:#FFCB6B;">cargo</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">fmt</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h3 id="crate-增加功能依赖库" tabindex="-1">crate 增加功能依赖库 <a class="header-anchor" href="#crate-增加功能依赖库" aria-label="Permalink to &quot;crate 增加功能依赖库&quot;">​</a></h3><p>在 Cargo.toml 的[dependencies]中添加 rand 依赖</p><div class="language-toml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">package</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#BABED8;">name </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">guessing_game</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">version </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.1.0</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">edition </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2021</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">dependencies</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#BABED8;">rand </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.8.3</span><span style="color:#89DDFF;">&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>使用 cargo build 命令即可下载依赖包后完成编译</p><h4 id="cargo-lock" tabindex="-1">Cargo.lock <a class="header-anchor" href="#cargo-lock" aria-label="Permalink to &quot;Cargo.lock&quot;">​</a></h4><p>同目录下的 Cargo.lock 确保版本相同，使得重新构建都会产生相同的结果</p><p>而 cargo update 命令则会忽略 Cargo.lock 文件，并计算出所有符合 Cargo.toml 声明的最新版本。 比如说 rand 的当前版本设定为 0.8.3，那么 cargo update 回去查找大于或等于 0.8.3 而小于 0.9.0 的版本。</p><h4 id="print-的几种格式" tabindex="-1">print 的几种格式 <a class="header-anchor" href="#print-的几种格式" aria-label="Permalink to &quot;print 的几种格式&quot;">​</a></h4><ul><li><a href="https://doc.rust-lang.org/std/fmt/" target="_blank" rel="noreferrer">更多格式参考</a></li></ul><div class="language-rs line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rs</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">fn</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#82AAFF;">format!</span><span style="color:#676E95;font-style:italic;">      // described above</span></span>
<span class="line"><span style="color:#82AAFF;">write!</span><span style="color:#676E95;font-style:italic;">       // first argument is either a &amp;mut io::Write or a &amp;mut fmt::Write, the destination</span></span>
<span class="line"><span style="color:#82AAFF;">writeln!</span><span style="color:#676E95;font-style:italic;">     // same as write but appends a newline</span></span>
<span class="line"><span style="color:#82AAFF;">print!</span><span style="color:#676E95;font-style:italic;">       // the format string is printed to the standard output</span></span>
<span class="line"><span style="color:#82AAFF;">println!</span><span style="color:#676E95;font-style:italic;">     // same as print but appends a newline</span></span>
<span class="line"><span style="color:#82AAFF;">eprint!</span><span style="color:#676E95;font-style:italic;">      // the format string is printed to the standard error</span></span>
<span class="line"><span style="color:#82AAFF;">eprintln!</span><span style="color:#676E95;font-style:italic;">    // same as eprint but appends a newline</span></span>
<span class="line"><span style="color:#82AAFF;">format_args!</span><span style="color:#676E95;font-style:italic;"> // described below.</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="语法基础" tabindex="-1">语法基础 <a class="header-anchor" href="#语法基础" aria-label="Permalink to &quot;语法基础&quot;">​</a></h3><h4 id="label-关键字-——-rust-可以给循环加上标签" tabindex="-1">label 关键字 —— Rust 可以给循环加上标签 <a class="header-anchor" href="#label-关键字-——-rust-可以给循环加上标签" aria-label="Permalink to &quot;label 关键字 —— Rust 可以给循环加上标签&quot;">​</a></h4><div class="language-rs line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rs</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">fn</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> x </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 分别用 &#39;outer 和 &#39;inner 来标记这两个循环</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> z </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#FFCB6B;">outer</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">loop</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">mut</span><span style="color:#BABED8;"> y </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#FFCB6B;">inner</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">loop</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">            </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#BABED8;"> y </span><span style="color:#89DDFF;">==</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">3</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">                y </span><span style="color:#89DDFF;">+=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">                </span><span style="color:#89DDFF;font-style:italic;">continue</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#FFCB6B;">inner</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // Skips to the next iteration of the &#39;inner loop</span></span>
<span class="line"><span style="color:#BABED8;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">            </span><span style="color:#82AAFF;">println!</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">x:</span><span style="color:#89DDFF;">{}</span><span style="color:#C3E88D;">,y:</span><span style="color:#89DDFF;">{}&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> x</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> y</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">            y </span><span style="color:#89DDFF;">+=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">            </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#BABED8;"> y </span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">5</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">                // break &#39;outer; // Breaks out of the &#39;inner loop</span></span>
<span class="line"><span style="color:#BABED8;">                </span><span style="color:#89DDFF;font-style:italic;">break</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#FFCB6B;">outer</span><span style="color:#BABED8;"> y</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // break可以带上返回值</span></span>
<span class="line"><span style="color:#BABED8;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#82AAFF;">println!</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">z: </span><span style="color:#89DDFF;">{}&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> z</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// for 循环添加 label 关键字</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// fn main() {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//     &#39;outer: for x in 1..=3 {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//         for y in 1..=5 {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//             if y == 3 {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//                 continue &#39;outer; // Skips the current iteration of the &#39;outer loop</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//             }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//             if x == 2 &amp;&amp; y == 4 {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//                 break &#39;outer; // Breaks out of the &#39;outer loop</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//             }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//             println!(&quot;x: {}, y: {}&quot;, x, y);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//         }</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//     }</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><h3 id="所有权" tabindex="-1">所有权 <a class="header-anchor" href="#所有权" aria-label="Permalink to &quot;所有权&quot;">​</a></h3><p>所有权是 Rust 用来管理内存的一套规则。</p><h4 id="所有权规则" tabindex="-1">所有权规则 <a class="header-anchor" href="#所有权规则" aria-label="Permalink to &quot;所有权规则&quot;">​</a></h4><ul><li>Rust 中每个值都有一个所有者。</li><li>一个值同时只能有一个所有者。</li><li>当所有者离开作用域范围，这个值将被丢弃。</li></ul><div class="language-rs line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rs</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">fn</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 规则 1：Rust中每个值都有一个所有者</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> s1 </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">from</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // s1 是值 &quot;hello&quot; 的所有者</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        // 规则 2：一个值同时只能有一个所有者</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> s2 </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> s1</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 所有权从 s1 转移到 s2（s1 不再有效）</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        // println!(&quot;{}&quot;, s1); // 这会导致编译时错误，因为 s1 不再有效</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#82AAFF;">println!</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;{}&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> s2</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // 这是允许的，因为 s2 现在拥有该值</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">}</span><span style="color:#676E95;font-style:italic;"> // s2在此处超出范围</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 规则 3：当所有者离开作用域范围，这个值将被丢弃</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 由于 s2 超出范围，因此为值 &quot;hello&quot; 分配的内存在此处自动释放。</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h4 id="结构体的所有权转移" tabindex="-1">结构体的所有权转移 <a class="header-anchor" href="#结构体的所有权转移" aria-label="Permalink to &quot;结构体的所有权转移&quot;">​</a></h4><div class="language-rs line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rs</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 当解构一个变量时，可以同时使用 move 和引用模式绑定的方式。当这么做时，部分 move 就会发生：变量中一部分的所有权被转移给其它变量，而另一部分我们获取了它的引用。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 在这种情况下，原变量将无法再被使用，但是它没有转移所有权的那一部分依然可以使用，也就是之前被引用的那部分</span></span>
<span class="line"><span style="color:#F78C6C;">fn</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">#[</span><span style="color:#BABED8;">derive</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Debug</span><span style="color:#89DDFF;">)]</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#C792EA;">struct</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Person</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">        name</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">        age</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Box</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">u8</span><span style="color:#89DDFF;">&gt;,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> person </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Person</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">        name</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">from</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Alice</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#BABED8;">        age</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Box</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">new</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">20</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 通过这种解构式模式匹配，person.name 的所有权被转移给新的变量 \`name\`</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 但是，这里 \`age\` 变量却是对 person.age 的引用, 这里 ref 的使用相当于: let age = &amp;person.age</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Person</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> name</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">ref</span><span style="color:#BABED8;"> age </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> person</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#82AAFF;">println!</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">The person&#39;s age is </span><span style="color:#89DDFF;">{}&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> age</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#82AAFF;">println!</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">The person&#39;s name is </span><span style="color:#89DDFF;">{}&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> name</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // Error! 原因是 person 的一部分已经被转移了所有权，因此我们无法再使用它</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    //println!(&quot;The person struct is {:?}&quot;, person);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 虽然 \`person\` 作为一个整体无法再被使用，但是 \`person.age\` 依然可以使用</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#82AAFF;">println!</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">The person&#39;s age from person struct is </span><span style="color:#89DDFF;">{}&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> person</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">age</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h3 id="疑难杂症" tabindex="-1">疑难杂症 <a class="header-anchor" href="#疑难杂症" aria-label="Permalink to &quot;疑难杂症&quot;">​</a></h3><h4 id="rust-中怎么判断一个变量的类型" tabindex="-1">rust 中怎么判断一个变量的类型 <a class="header-anchor" href="#rust-中怎么判断一个变量的类型" aria-label="Permalink to &quot;rust 中怎么判断一个变量的类型&quot;">​</a></h4><div class="language-rs line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rs</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">use</span><span style="color:#FFCB6B;"> std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">type_name</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">fn</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">test_type</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#BABED8;">_</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#82AAFF;">println!</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;{</span><span style="color:#C3E88D;">:?</span><span style="color:#89DDFF;">}&quot;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">type_name</span><span style="color:#89DDFF;">::&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> tup</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">i32</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">f64</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">u8</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">bool</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#FFCB6B;">str</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">500</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">.</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">false,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello World</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">println!</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;{</span><span style="color:#C3E88D;">:?</span><span style="color:#89DDFF;">}&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> tup</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">println!</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;{}</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">{}&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> tup</span><span style="color:#89DDFF;">.</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> tup</span><span style="color:#89DDFF;">.</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// typeof</span></span>
<span class="line"><span style="color:#82AAFF;">test_type</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">tup</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // &quot;(i32, f64, u8, bool, &amp;str)&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">test_type</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">tup</span><span style="color:#89DDFF;">.</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // &quot;&amp;str&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> arr</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">i32</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">]</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">];</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> months</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[&amp;</span><span style="color:#FFCB6B;">str</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">]</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Jan</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Feb</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Mar</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">];</span></span>
<span class="line"><span style="color:#82AAFF;">test_type</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">arr</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // &quot;[i32; 5]&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">test_type</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">months</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // &quot;[&amp;str; 3]&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h4 id="rust-中如何打印一个结构体变量" tabindex="-1">rust 中如何打印一个结构体变量 <a class="header-anchor" href="#rust-中如何打印一个结构体变量" aria-label="Permalink to &quot;rust 中如何打印一个结构体变量&quot;">​</a></h4><div class="language-rs line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rs</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 填空，让代码工作</span></span>
<span class="line"><span style="color:#89DDFF;">#[</span><span style="color:#BABED8;">derive</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Debug</span><span style="color:#89DDFF;">)]</span></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">User</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    active</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">bool</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    username</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    email</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    sign_in_count</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">u64</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F78C6C;">fn</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> u1 </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">User</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">        email</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">from</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">someone@example.com</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#BABED8;">        username</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">from</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sunface</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#BABED8;">        active</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">true,</span></span>
<span class="line"><span style="color:#BABED8;">        sign_in_count</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> u2 </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">set_email</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">u1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#82AAFF;">dbg!</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#BABED8;">u2</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#82AAFF;">println!</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;{</span><span style="color:#C3E88D;">:?</span><span style="color:#89DDFF;">}&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;">u2</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">fn</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">set_email</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">u</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">User</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">User</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">User</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">        email</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">from</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">contact@im.dev</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#BABED8;">        active</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">false,</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#89DDFF;">..</span><span style="color:#BABED8;">u</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h4 id="添加-dependencies-依赖进行-cargo-build-后一直等待" tabindex="-1">添加 dependencies 依赖进行 cargo build 后一直等待 <a class="header-anchor" href="#添加-dependencies-依赖进行-cargo-build-后一直等待" aria-label="Permalink to &quot;添加 dependencies 依赖进行 cargo build 后一直等待&quot;">​</a></h4><p><a href="https://github.com/chanchancl/How-to-build-a-develop-environment-for-rust" target="_blank" rel="noreferrer">How-to-build-a-develop-environment-for-rust</a></p><p>用 clash 挂代理不代表命令行中的代理生效，可以通过 clash 的控制面板找到“复制终端代理命令”功能，复制后在终端中输入，便可代理翻墙提高网速下载。</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">rm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-rf</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">~/.cargo/registry/index/</span><span style="color:#BABED8;">*</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">~/.cargo/.package-cache</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="参考文档" tabindex="-1">参考文档 <a class="header-anchor" href="#参考文档" aria-label="Permalink to &quot;参考文档&quot;">​</a></h3><ul><li><a href="https://www.rustwiki.org.cn/zh-CN/book/appendix-07-nightly-rust.html" target="_blank" rel="noreferrer">Rust 程序设计语言 中文版</a></li><li><a href="https://rustwiki.org/" target="_blank" rel="noreferrer">Rust 中文站点</a></li><li><a href="https://google.github.io/comprehensive-rust/zh-CN/index.html" target="_blank" rel="noreferrer">Comprehensive Rust</a></li><li><a href="https://course.rs/about-book.html" target="_blank" rel="noreferrer">Rust 语言圣经</a> —— 由 Google 的 Android 团队开发的免费 Rust 课程</li><li><a href="https://zh.practice.rs/why-exercise.html" target="_blank" rel="noreferrer">Rust 语言实战</a></li></ul>`,38),o=[e];function r(t,c,i,y,D,F){return n(),a("div",null,o)}const u=s(p,[["render",r]]);export{b as __pageData,u as default};
