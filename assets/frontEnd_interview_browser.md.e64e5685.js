import{_ as r,o as a,c as n,z as e,a as t}from"./chunks/framework.62a149d4.js";const u=JSON.parse('{"title":"浏览器相关","description":"","frontmatter":{},"headers":[],"relativePath":"frontEnd/interview/browser.md","filePath":"frontEnd/interview/browser.md"}'),s={name:"frontEnd/interview/browser.md"},o=e("h1",{id:"浏览器相关",tabindex:"-1"},[t("浏览器相关 "),e("a",{class:"header-anchor",href:"#浏览器相关","aria-label":'Permalink to "浏览器相关"'},"​")],-1),c=e("h2",{id:"async-和-defer-的解析过程",tabindex:"-1"},[t("async 和 defer 的解析过程 "),e("a",{class:"header-anchor",href:"#async-和-defer-的解析过程","aria-label":'Permalink to "async 和 defer 的解析过程"'},"​")],-1),d=e("p",null,"浏览器解析到带 async 属性的 script 标签时，不会中断 html 解析，而是并行下载脚本；当脚本下载完成后，中断解析并执行脚本； 浏览器解析到带 defer 属性的 script 标签时，不会中断 html 解析，而是并行下载脚本；当浏览器解析完HTML时、DOMContentLoaded 事件即将被触发时，此时再执行下载完成的脚本；",-1),i=[o,c,d];function l(_,f,h,p,m,b){return a(),n("div",null,i)}const x=r(s,[["render",l]]);export{u as __pageData,x as default};
