import{_ as s,o as n,c as a,O as e}from"./chunks/framework.932f8bee.js";const A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"backEnd/nest/index.md","filePath":"backEnd/nest/index.md"}'),t={name:"backEnd/nest/index.md"},l=e(`<p><strong>文档</strong></p><ul><li><a href="https://docs.nestjs.cn/9/firststeps" target="_blank" rel="noreferrer">nest 中文指南</a></li><li><a href="https://github.com/nestjs/nest" target="_blank" rel="noreferrer">nest - github 仓库</a></li><li><a href="https://juejin.cn/book/7226988578700525605?utm_source=course_list" target="_blank" rel="noreferrer">掘金小册 - nest 通关秘籍（已购）</a></li></ul><p>个人仓库地址：<a href="https://github.com/HarrisonLS/my-nest-project" target="_blank" rel="noreferrer">https://github.com/HarrisonLS/my-nest-project</a></p><p><strong>环境准备</strong> 安装 node，并保证版本大于等于 12</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">$node -v</span></span>
<span class="line"><span style="color:#A6ACCD;">v16.18.1</span></span>
<span class="line"><span style="color:#A6ACCD;">$ npm -v</span></span>
<span class="line"><span style="color:#A6ACCD;">7.x.x</span></span></code></pre></div><p>安装 nest 包</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">$ npm i -g @nestjs/cli</span></span>
<span class="line"><span style="color:#A6ACCD;">$ nest new project-name</span></span></code></pre></div><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to &quot;&quot;">​</a></h2><p>中文指南教程 new 一个新项目后，进入 src 路径可以看到以下内容。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">src</span></span>
<span class="line"><span style="color:#A6ACCD;"> ├── app.controller.spec.ts // 对于基本控制器的单元测试样例。</span></span>
<span class="line"><span style="color:#A6ACCD;"> ├── app.controller.ts      // 带有单个路由的基本控制器示例。</span></span>
<span class="line"><span style="color:#A6ACCD;"> ├── app.module.ts          // 应用程序的根模块。</span></span>
<span class="line"><span style="color:#A6ACCD;"> ├── app.service.ts         // 带有单个方法的基本服务</span></span>
<span class="line"><span style="color:#A6ACCD;"> └── main.ts                // 应用程序入口文件，</span></span>
<span class="line"><span style="color:#A6ACCD;">                               它使用 NestFactory</span></span>
<span class="line"><span style="color:#A6ACCD;">                               用来创建 Nest 应用实例。</span></span></code></pre></div><p>项目初始化及 IOC <a href="https://qingtu.co/b/05c63cbc77fd43dfb4faed3d49046920" target="_blank" rel="noreferrer">https://qingtu.co/b/05c63cbc77fd43dfb4faed3d49046920</a></p><h2 id="小册-nest-通关秘籍" tabindex="-1">小册 - nest 通关秘籍 <a class="header-anchor" href="#小册-nest-通关秘籍" aria-label="Permalink to &quot;小册 - nest 通关秘籍&quot;">​</a></h2><p>nest cli 命令</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">nest new 快速创建项目</span></span>
<span class="line"><span style="color:#A6ACCD;">nest generate 快速生成各种代码</span></span>
<span class="line"><span style="color:#A6ACCD;">nest build 使用 tsc 或者 webpack 构建代码</span></span>
<span class="line"><span style="color:#A6ACCD;">nest start 启动开发服务，支持 watch 和调试</span></span>
<span class="line"><span style="color:#A6ACCD;">nest info 打印 node、npm、nest 包的依赖版本</span></span></code></pre></div><p>数据传输的方式主要有 5 种</p><ul><li>url param</li><li>query</li><li>form-urlencoded</li><li>form-data</li><li>json</li></ul><p>nest 创建 crud 服务</p><ul><li>安装 @nestjs/cli，使用 nest new xxx 创建一个 Nest 的项目，</li><li>在根目录执行 nest g resource person 快速生成 person 模块的 crud 代码</li><li>nest start --watch 启动 Nest 服务</li></ul>`,18),p=[l];function o(r,c,i,d,C,h){return n(),a("div",null,p)}const g=s(t,[["render",o]]);export{A as __pageData,g as default};
